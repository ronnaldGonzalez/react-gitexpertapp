{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GitGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","toString","length","cats","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","tittle","title","images","downsized_medium","GifGridItem","className","src","alt","GitGrid","loading","state","setstate","useEffect","then","useFetchGifs","GitExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,mBACTN,EAAWO,WAAWC,OAAS,IAC9BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAmBS,OACrCR,EAAc,MAIlB,SACE,uBACAS,KAAK,OACLC,MAAOX,EACPY,SAjBoB,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCF,EADnC,8DAEAG,MAAMD,GAFN,cAEbE,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,OAAQF,EAAIG,MACZV,IAAKO,EAAII,OAAOC,iBAAiBZ,QARtB,kBAWZK,GAXY,4CAAH,sDCEPQ,EAAc,SAAC,GAAqB,EAApBL,GAAqB,IAAlBC,EAAiB,EAAjBA,OAAQT,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKP,IACpB,4BAAIA,QCFHQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZhB,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAf,GACFa,EAAS,CACLhB,KAAMG,EACNW,SAAS,SAGtB,CAACpB,IAGGqB,EDjBuBI,CAAazB,GAA/Ba,EAFyB,EAE9BP,KAAYc,EAFkB,EAElBA,QAGnB,OACI,qCACI,oBAAKJ,UAAU,oCAAf,SAAoDhB,IACnDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOL,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEoBtBgB,MAhCf,SAAsBC,GAAQ,IAAD,EAEW3C,mBAAS,CAAC,cAFrB,mBAElB4C,EAFkB,KAEN7C,EAFM,KAQzB,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWpB,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YClBjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.30ae60ec.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('hecho el submit');\n        if(inputValue.toString().length > 2){\n            setCategories(cats => [inputValue,...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit= { handleSubmit}>\n          <input \n          type=\"text\" \n          value={inputValue}\n          onChange={handleInputChange}\n          />\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired,\n}\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=5&api_key=dRD17xnBg31KMQQTdvDhnTvIMwML6EKT`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            tittle: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n    return gifs;\n}\n\n","import React from 'react'\n\nexport const GifGridItem = ({id,tittle, url}) => {\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={tittle}/>\n            <p>{tittle}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GitGrid = ({ category }) => {\n\n    const {data:images,loading} = useFetchGifs(category);\n\n    \n    return (\n        <>\n            <h3  className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map((img) => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    )\n                    )}\n            </div>\n        </>\n\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n\n\n    useEffect(() => {\n        getGifs(category)\n            .then(img => {\n                setstate({\n                    data: img,\n                    loading: false\n                })\n            });\n    }, [category])\n\n\n    return state;\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { AddCategory } from './components/AddCategory';\nimport { GitGrid } from './components/GitGrid';\n\nfunction GitExpertApp(props) {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     setCategories([...categories,'Casador X']);\n    //     console.log(categories);\n    // }\n    return (\n        <>\n            <h2>Git Expert App</h2>\n            <AddCategory setCategories={setCategories}></AddCategory>\n            <hr />\n            {/* <button onClick={handleAdd}>Agregar</button> */}\n            <ol>\n                {\n                    categories.map(category => (\n                        <GitGrid\n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nGitExpertApp.propTypes = {\n\n}\n\nexport default GitExpertApp\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GitExpertApp from './GitExpertApp';\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}